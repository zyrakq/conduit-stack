services:
  conduit:
    container_name: conduit
    image: conduit
    restart: unless-stopped
    volumes:
      - conduit-db:/var/lib/matrix-conduit/
    environment:
      CONDUIT_SERVER_NAME: ${CONDUIT_SERVER_NAME}
      CONDUIT_DATABASE_PATH: ${CONDUIT_DATABASE_PATH}
      CONDUIT_DATABASE_BACKEND: ${CONDUIT_DATABASE_BACKEND}
      CONDUIT_PORT: ${CONDUIT_PORT}
      CONDUIT_MAX_REQUEST_SIZE: ${CONDUIT_MAX_REQUEST_SIZE}
      CONDUIT_ALLOW_REGISTRATION: ${CONDUIT_ALLOW_REGISTRATION}
      # CONDUIT_REGISTRATION_TOKEN: ${CONDUIT_REGISTRATION_TOKEN}
      CONDUIT_ALLOW_FEDERATION: ${CONDUIT_ALLOW_FEDERATION}
      CONDUIT_ALLOW_CHECK_FOR_UPDATES: ${CONDUIT_ALLOW_CHECK_FOR_UPDATES}
      CONDUIT_TRUSTED_SERVERS: ${CONDUIT_TRUSTED_SERVERS}
      CONDUIT_ADDRESS: ${CONDUIT_ADDRESS}
      CONDUIT_CONFIG: ${CONDUIT_CONFIG:-/matrix-conduit/conduit.toml}
      VIRTUAL_PORT: ${VIRTUAL_PORT:-$CONDUIT_PORT}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      CONDUIT_TURN_URIS: ${CONDUIT_TURN_URIS}
      CONDUIT_TURN_SECRET: ${CONDUIT_TURN_SECRET}
      STEP_CA_TRUST: ${STEP_CA_TRUST:-true}
      STEP_CA_TRUST_RESTART: ${STEP_CA_TRUST_RESTART:-true}
    networks:
      - matrix-network
      - letsencrypt-network
    build: .
    configs:
      - source: conduit-config
        target: ${CONDUIT_CONFIG:-/matrix-conduit/conduit.toml}
  conduit-nginx:
    container_name: conduit-nginx
    image: nginx
    restart: unless-stopped
    environment:
      VIRTUAL_PORT: ${WELL_KNOWN_VIRTUAL_PORT:-80}
      VIRTUAL_HOST: ${WELL_KNOWN_VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${WELL_KNOWN_LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${WELL_KNOWN_LETSENCRYPT_EMAIL}
    depends_on:
      - conduit
    configs:
      - source: nginx-config
        target: /etc/nginx/nginx.conf
    networks:
      - letsencrypt-network
volumes:
  conduit-db:
    name: conduit-db
    driver: local
networks:
  matrix-network:
    name: matrix-network
  letsencrypt-network:
    external: true
configs:
  nginx-config:
    content: |
      user nginx;
      worker_processes auto;
      error_log /var/log/nginx/error.log;
      pid /run/nginx.pid;

      events {
        worker_connections 16384;
        multi_accept on;
        use epoll;
      }
      http {
        server {
          server_name ${WELL_KNOWN_VIRTUAL_HOST};
          listen      80 default_server;

          location ~ ^/.well-known/(.*)$ {
            proxy_pass http://conduit:${CONDUIT_PORT};
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
            proxy_set_header X-Forwarded-Host $$host;
          }

          location ~ ^/_matrix/(.*)$ {
            proxy_pass http://conduit:${CONDUIT_PORT};
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
            proxy_set_header X-Forwarded-Host $$host;
          }

          location / {
            return 404;
          }
        }
      }
  conduit-config:
    content: |-
      [global]
      server_name = "${CONDUIT_SERVER_NAME}"

      [global.idps.sso]
      issuer = "${CONDUIT_IDPS_SSO_ISSUER}"
      name = "${CONDUIT_IDPS_SSO_NAME}"
      icon = "${CONDUIT_IDPS_SSO_ICON}"
      scopes = ${CONDUIT_IDPS_SSO_SCOPES}
      client_id = "${CONDUIT_IDPS_SSO_CLIENT_ID}"
      client_secret = "${CONDUIT_IDPS_SSO_CLIENT_SECRET}"
      auth_method = "${CONDUIT_IDPS_SSO_AUTH_METHOD}"
